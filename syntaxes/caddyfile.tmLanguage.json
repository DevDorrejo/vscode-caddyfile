{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",

	"name": "Caddyfile",
	"fileTypes": [ "Caddyfile", "Wedgefile" ],
	"scopeName": "source.Caddyfile",

	"patterns": [
		{ "include": "#comments" },
		{ "include": "#variables" },
		{ "include": "#strings" },
		{ "include": "#matchers" },
		{ "include": "#domains" },

		{
			"begin": "(^\\s*)([\\w+-]+\\b)",
			"end": "\n",

			"beginCaptures": {
				"0": { "name": "keyword.Caddyfile" }
			},

			"endCaptures": {
				"0": { "name": "keyword.Caddyfile"}
			},

			"patterns": [
				{ "include": "#strings" },

				{
					"begin": "@",
					"end": " ",
					"name": "support.function.Caddyfile"
				}
			]
		},

		{
			"begin": "(^.*)({\\s+$)",
			"end": "^\\s*}$",

			"beginCaptures": {
				"0": { "name": "support.function.Caddyfile" }
			},

			"endCaptures": {
				"0": { "name": "support.function.Caddyfile" }
			},

			"patterns": [
				{ "include": "#comments" },
				{ "include": "#variables" },
				{ "include": "#strings" },
				{ "include": "#matchers" },

				{
					"comment": "Directives",
					"match": "^\\s*((on)( \\b\\w+\\b )(.*$))?([\\w-]*)",

					"captures": {
						"2": { "name": "support.constant.Caddyfile" },
						"4": { "name": "string.Caddyfile" },
						"5": { "name": "support.constant.Caddyfile" }
					}
				},

				{
					"begin": "\\s+{$",
					"end": "^\\s*}$",

					"patterns": [
						{ "include": "#comments" },
						{ "include": "#variables" },
						{ "include": "#strings" },
						{ "include": "#matchers" },

						{
							"comment": "Sub Directives",
							"match": "(^\\s*)([\\w+-]+\\b)",
							"captures": {
								"2": {
									"name": "keyword.Caddyfile"
								}
							}
						}
					]
				}
			]
		},

		{
			"comment": "import: the only directive allowed outside a block",
			"match": "^\\s*import",
			"name": "support.type.Caddyfile"
		},

		{
			"comment": "lines that end in a comma are still part of the main directive, there may be a better way of doing this but I couol",
			"match": "(^.*)(,\\s+$)",
			"name": "support.class.Caddyfile"
		}
	],

	"repository": {
		"variables": {
			"patterns": [
				{
					"name": "support.other.variable.Caddyfile",
					"match": "{[$\\w]+}"
				}
			]
		},

		"comments": {
			"patterns": [
				{
					"name": "comment.line.Caddyfile",
					"match": "#.*"
				}
			]
		},

		"strings": {
			"patterns": [
				{
					"comment": "Double Quoted Strings",
					"begin": "\"",
					"end": "\"",
					"name": "string.quoted.double.Caddyfile",
					"patterns": [
						{ "include": "#variables" }
					]
				},

				{
					"comment": "Single Quoted Strings",
					"begin": "'",
					"end": "'",
					"name": "string.quoted.single.Caddyfile"
				}
			]
		},

		"domains": {
			"patterns": [
				{
					"name": "support.function.caddyfile",
					"match": "(((\\d{1,3}\\.){3}\\d{1,3})|(((\\d|\\w){1,}\\.)?(\\w|\\d){1,63})(\\.\\w{2,24}))(:\\d{1,})?\\s"
				}
			]
		},

		"matchers": {
			"patterns": [
				{
					"name": "support.function.Caddyfile",
					"match": "(^\\s*)(@[\\w]+\\b)"
				}
			]
		}
	}
}
